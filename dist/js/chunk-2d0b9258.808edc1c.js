(window.webpackJsonp = window.webpackJsonp || []).push([['chunk-2d0b9258'], { 3269: function (t, e, i) { 'use strict'; i.r(e); var s = function () { var t = this; var e = t.$createElement; var i = t._self._c || e; return i('b-container', { attrs: { fluid: '' } }, [i('main-modal', { attrs: { id: 'ticketsDetailsModal', size: 'lg' }, scopedSlots: t._u([{ key: 'header', fn: function () { return [t.typeOfModal == 'add' ? i('h4', { staticClass: 'font-weight-bold' }, [i('span', { staticClass: 'text-warning' }, [t._v('Add: ')]), t._v(' Ticket')]) : i('h4', { staticClass: 'font-weight-bold' }, [i('span', { staticClass: 'text-info' }, [t._v('Edit: ')]), t._v(' Ticket')])] }, proxy: !0 }, { key: 'body', fn: function () { return [i('ticket-details', { attrs: { requestLoading: t.requestLoading, ticketDetails: t.ticketDetails, typeOfModal: t.typeOfModal }, on: { addTicket: t.addTicket, editTicket: t.editTicket } })] }, proxy: !0 }]) }), i('main-modal', { attrs: { id: 'ticketDetailsViewModal', size: 'lg' }, scopedSlots: t._u([{ key: 'header', fn: function () { return [i('h4', { staticClass: 'font-weight-bold' }, [i('span', { staticClass: 'text-success-light' }, [t._v('View: ')]), t._v(' Ticket')])] }, proxy: !0 }, { key: 'borderHeader', fn: function () { return [i('p', { staticClass: 'p-4 borderHeaderModal' }, [t._v(' ' + t._s(t.ticketDetails.name) + ' ')])] }, proxy: !0 }, { key: 'body', fn: function () { return [i('ticket-view', { attrs: { ticketDetails: t.ticketDetails } })] }, proxy: !0 }]) }), i('b-row', [i('b-col', { staticClass: 'mb-2 d-flex justify-content-between align-items-center', attrs: { lg: '12' } }, [i('h3', [t._v('Tickets')]), i('div', [i('b-button', { staticClass: 'add_button text-white', attrs: { variant: 'warning' }, on: { click: t.openPopup } }, [t._v(' Add Ticket'), i('i', { staticClass: 'las la-plus ml-3' })])], 1)]), i('b-col', { attrs: { lg: '12' } }, [i('main-table', { staticClass: 'mb-0 table-borderless', attrs: { fields: t.columns, list_url: 'tickets', reloadData: t.reloadTable }, on: { sortChanged: t.sortChanged } })], 1)], 1)], 1) }; var a = []; var c = (i('d3b7'), i('bcae')); var l = function () { var t = this; var e = t.$createElement; var i = t._self._c || e; return i('div', [i('validationObserver', { scopedSlots: t._u([{ key: 'default', fn: function (e) { var s = e.handleSubmit; return [i('b-form', { on: { submit: function (e) { return e.preventDefault(), s(t.addTicket) } } }, [i('b-row', [i('b-col', { staticClass: 'mb-3', attrs: { md: '4' } }, [i('input-form', { attrs: { placeholder: 'Ticket Name', validate: 'required', name: 'Ticket name', label: 'Ticket Name' }, model: { value: t.ticket.name, callback: function (e) { t.$set(t.ticket, 'name', e) }, expression: 'ticket.name' } })], 1), i('b-col', { staticClass: 'mb-3', attrs: { md: '8' } }, [i('input-form', { attrs: { placeholder: 'Write a brief description', validate: 'required', name: 'Ticket details', label: 'Details' }, model: { value: t.ticket.details, callback: function (e) { t.$set(t.ticket, 'details', e) }, expression: 'ticket.details' } })], 1), i('b-col', { staticClass: 'mb-3', attrs: { md: '4' } }, [i('validation-provider', { staticClass: 'flex-grow-1', attrs: { name: 'EGP price', rules: 'required|numeric' }, scopedSlots: t._u([{ key: 'default', fn: function (e) { var s = e.errors; return [i('b-form-group', { attrs: { label: 'Price' } }, [i('b-input-group', { attrs: { append: 'EGP' } }, [i('b-form-input', { class: [{ 'is-invalid': s.length > 0 }], attrs: { placeholder: '000.00' }, model: { value: t.ticket.price_egp, callback: function (e) { t.$set(t.ticket, 'price_egp', e) }, expression: 'ticket.price_egp' } })], 1)], 1)] } }], null, !0) })], 1), i('b-col', { staticClass: 'mb-5 d-flex justify-content-center', attrs: { md: '4' } }, [i('b-form-checkbox', { staticClass: 'custom-checkbox-color-check mt-4 pt-3', attrs: { type: 'checkbox', id: 'checkbox', label: 'Discounted Price', color: 'warning' }, model: { value: t.selected, callback: function (e) { t.selected = e }, expression: 'selected' } }, [i('span', { staticClass: 'font-size-12 text-primary' }, [t._v(' Discounted Price ')])])], 1), i('b-col', { staticClass: 'mb-3', attrs: { md: '4' } }, [i('input-form', { attrs: { placeholder: '000.00', disabled: !t.selected, validate: t.selected ? 'required' : '', name: 'Discounted EGP price', label: 'Discounted Price' }, model: { value: t.ticket.discount_price_egp, callback: function (e) { t.$set(t.ticket, 'discount_price_egp', e) }, expression: 'ticket.discount_price_egp' } })], 1), i('b-col', { staticClass: 'mb-3', attrs: { md: '12' } }, [i('validation-provider', { staticClass: 'flex-grow-1', attrs: { name: 'Conditions', rules: 'required' }, scopedSlots: t._u([{ key: 'default', fn: function (e) { var s = e.errors; return [i('b-form-group', { attrs: { label: 'Conditions' } }, [i('b-form-textarea', { class: [{ 'is-invalid': s.length > 0 }], attrs: { placeholder: 'Write your conditions in bullet points', validate: 'required', rows: '1' }, model: { value: t.ticket.conditions, callback: function (e) { t.$set(t.ticket, 'conditions', e) }, expression: 'ticket.conditions' } })], 1)] } }], null, !0) })], 1)], 1), t.typeOfModal != 'view' ? i('b-row', [i('b-col', { staticClass: 'mt-4', attrs: { md: '12' } }, [t.typeOfModal == 'add' ? i('div', { staticClass: 'd-flex justify-content-center' }, [t.requestLoading ? i('b-button', { staticClass: 'button-orange-modal' }, [i('spinner-loading')], 1) : i('b-button', { staticClass: 'button-orange-modal', attrs: { type: 'submit' } }, [i('i', { staticClass: 'las la-plus' })])], 1) : t._e(), t.typeOfModal == 'edit' ? i('div', { staticClass: 'd-flex justify-content-center' }, [t.requestLoading ? i('b-button', { staticClass: 'button-blue-modal' }, [i('spinner-loading')], 1) : i('b-button', { staticClass: 'button-blue-modal', attrs: { type: 'submit' } }, [i('i', { staticClass: 'las la-pen' })])], 1) : t._e()])], 1) : t._e()], 1)] } }]) })], 1) }; var o = []; var n = i('5530'); var r = (i('b0c0'), { props: { requestLoading: { type: Boolean, default: !1 }, typeOfModal: { type: String, default: 'add' }, ticketDetails: { type: Object } }, data: function () { return { ticket: { name: '', details: '', price_egp: '', price_euro: '0', price_dollar: '0', discount_price_egp: null, discount_price_euro: null, discount_price_dollar: null, conditions: '', status: 'active' }, selected: '' } }, methods: { addTicket: function () { this.ticket.price_euro = this.ticket.price_euro ? this.ticket.price_euro : 0, this.ticket.price_dollar = this.ticket.price_dollar ? this.ticket.price_dollar : 0, this.ticket.discount_price_egp = this.selected ? this.ticket.discount_price_egp : '', this.typeOfModal === 'add' ? this.$emit('addTicket', this.ticket) : this.$emit('editTicket', Object(n.a)(Object(n.a)({}, this.ticket), {}, { _method: 'put' })) } }, watch: {}, computed: {}, created: function () { this.ticketDetails && (this.ticket = { name: this.ticketDetails.name, details: this.ticketDetails.details, price_egp: this.ticketDetails.price_egp, price_euro: this.ticketDetails.price_euro ? this.ticketDetails.price_euro : '', price_dollar: this.ticketDetails.price_dollar ? this.ticketDetails.price_dollar : '', discount_price_egp: this.ticketDetails.discount_price_egp, discount_price_euro: this.ticketDetails.discount_price_euro, discount_price_dollar: this.ticketDetails.discount_price_dollar, conditions: this.ticketDetails.conditions, status: this.ticketDetails.status }), this.ticket.discount_price_egp && (this.selected = !0) } }); var d = r; var u = i('2877'); var p = Object(u.a)(d, l, o, !1, null, null, null); var k = p.exports; var b = function () { var t = this; var e = t.$createElement; var i = t._self._c || e; return i('div', { staticClass: 'pl-3 pr-3' }, [i('p', [t._v('TICKET INFORMATION')]), i('b-row', { staticClass: 'pl-3 mb-2' }, [i('b-col', { staticClass: 'infoKey', attrs: { md: '12' } }, [i('p', [t._v('Details')])]), i('b-col', { staticClass: 'infoValue', attrs: { md: '12' } }, [i('p', [t._v(t._s(t.ticketDetails.details))])])], 1), i('b-row', { staticClass: 'pl-3 mb-2' }, [i('b-col', { staticClass: 'infoKey', attrs: { md: '4' } }, [i('p', [t._v('Price')])]), i('b-col', { staticClass: 'infoKey', attrs: { md: '8' } }, [i('p', [t._v('Discounted price')])]), i('b-col', { staticClass: 'infoValue', attrs: { md: '4' } }, [i('p', [t._v('EGP ' + t._s(t.ticketDetails.price_egp))])]), i('b-col', { staticClass: 'infoValue', attrs: { md: '8' } }, [i('p', [t.ticketDetails.discount_price_egp ? i('span', [t._v('EGP ' + t._s(t.ticketDetails.discount_price_egp))]) : i('span', [t._v('N/A')])])])], 1), i('b-row', { staticClass: 'pl-3 mb-2' }, [i('b-col', { staticClass: 'infoKey', attrs: { md: '12' } }, [i('p', [t._v('Conditions')])]), i('b-col', { staticClass: 'infoValue', attrs: { md: '12' } }, [i('p', [t._v(t._s(t.ticketDetails.conditions))])])], 1)], 1) }; var f = []; var h = { props: { ticketDetails: { type: Object } } }; var _ = h; var m = Object(u.a)(_, b, f, !1, null, null, null); var g = m.exports; var v = i('bb36'); var y = { addNewTicket: function (t) { return Object(v.a)().post('tickets', t) }, getTicketDetails: function (t) { return Object(v.a)().get('tickets/'.concat(t)) }, editTicket: function (t, e) { return Object(v.a)().post('tickets/'.concat(t), e) } }; var D = { data: function () { return { reloadTable: !1, requestLoading: !1, columns: [{ label: '#', key: 'id', class: 'text-left' }, { label: 'Ticket Name', key: 'name', class: 'text-left' }, { label: 'Details', key: 'details', class: 'text-left' }, { label: 'Price EGP', key: 'price_egp', class: 'text-left', type: 'multi-value' }, { label: 'Discounted Price', key: 'discount_price_egp', class: 'text-left', type: 'multi-value' }, { label: 'Conditions', key: 'conditions', class: 'text-left' }, { label: 'Change Status', key: 'change_status', type: 'switch', tableType: 'ticket', idKey: 'ticket_id', class: 'text-left' }, { label: 'Actions', key: 'actions', class: 'text-left', type: 'actions', actions: [{ icon: 'las la-eye', color: 'success-light', text: 'View', actionName: 'showTicket', actionParams: 'fullObj' }, { icon: 'las la-pen', color: 'info', text: 'Edit', actionName: 'showTicketToEdit', actionParams: 'fullObj' }, { icon: 'las la-trash-alt', color: 'danger', text: 'Delete', showAlert: !0, actionHeader: 'Delete', titleHeader: 'Ticket', textContent: 'name', url: 'tickets' }] }], typeOfModal: 'add', ticketDetails: {}, ticketId: '' } }, components: { ticketDetails: k, ticketView: g }, methods: { sortChanged: function (t) { console.log(t) }, openPopup: function () { this.ticketId = '', this.typeOfModal = 'add', this.ticketDetails = !1, this.$bvModal.show('ticketsDetailsModal') }, addTicket: function (t) { var e = this; this.requestLoading = !0, this.reloadTable = !1, y.addNewTicket(t).then(function (t) { e.reloadTable = !0, c.c.showSnackbar('success', t.data.message), e.$bvModal.hide('ticketsDetailsModal') }).finally(function () { e.requestLoading = !1 }) }, editTicket: function (t) { var e = this; this.requestLoading = !0, this.reloadTable = !1, y.editTicket(this.ticketId, t).then(function (t) { e.reloadTable = !0, c.c.showSnackbar('success', t.data.message), e.$bvModal.hide('ticketsDetailsModal') }).finally(function () { e.requestLoading = !1 }) }, showDetails: function (t) { this.typeOfModal = 'view', this.ticketDetails = t, this.$bvModal.show('ticketDetailsViewModal') }, showTicketToEdit: function (t) { this.ticketId = t.id, this.typeOfModal = 'edit', this.ticketDetails = t, this.$bvModal.show('ticketsDetailsModal') } }, created: function () { this.$root.$on('showTicket', this.showDetails), this.$root.$on('showTicketToEdit', this.showTicketToEdit) }, beforeDestroy: function () { this.$root.$off('showTicket'), this.$root.$off('showTicketToEdit') }, mounted: function () { c.c.index() } }; var C = D; var w = Object(u.a)(C, s, a, !1, null, null, null); e.default = w.exports } }])
// # sourceMappingURL=chunk-2d0b9258.808edc1c.js.map
