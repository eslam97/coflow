(window.webpackJsonp = window.webpackJsonp || []).push([['chunk-fa95b220'], { 3548: function (t, a, e) { 'use strict'; var i = e('bb36'); a.a = { getAllPermissions: function () { return Object(i.a)().get('permissions') }, getAllRoles: function () { return Object(i.a)().get('roles') }, getRoleDetails: function (t) { return Object(i.a)().get('roles/'.concat(t)) }, editRole: function (t, a) { return Object(i.a)().post('roles/'.concat(t), a) }, saveRole: function (t) { return Object(i.a)().post('roles', t) }, saveAdmin: function (t) { return Object(i.a)().post('admins', t) }, getAdminInfo: function (t) { return Object(i.a)().get('admins/'.concat(t)) }, editAdmin: function (t, a) { return Object(i.a)().post('admins/'.concat(t), a) } } }, d88c: function (t, a, e) { 'use strict'; e.r(a); var i = function () { var t = this; var a = t.$createElement; var e = t._self._c || a; return e('b-container', { attrs: { fluid: '' } }, [e('main-modal', { attrs: { id: 'adminDetails', size: 'lg' }, scopedSlots: t._u([{ key: 'header', fn: function () { return [t.typeOfModal == 'add' ? e('h4', { staticClass: 'font-weight-bold' }, [e('span', { staticClass: 'text-warning' }, [t._v('Add: ')]), t._v(' Admin')]) : e('h4', { staticClass: 'font-weight-bold' }, [e('span', { staticClass: 'text-info' }, [t._v('Edit: ')]), t._v(' Admin')])] }, proxy: !0 }, { key: 'body', fn: function () { return [e('admin-details', { attrs: { 'type-of-modal': t.typeOfModal, requestLoading: t.requestLoading, adminDetails: t.adminDetails }, on: { saveAdmin: t.saveAdmin, editAdmin: t.editAdmin } })] }, proxy: !0 }]) }), e('b-row', [e('b-col', { staticClass: 'mb-2 d-flex justify-content-between align-items-center', attrs: { lg: '12' } }, [e('h3', [t._v('Admins')]), e('div', [e('router-link', { attrs: { to: { name: 'roles' } } }, [e('b-button', { staticClass: 'add_button text-white', attrs: { variant: 'warning' } }, [t._v(' Go To Roles'), e('i', { staticClass: 'las la-arrow-right ml-3' })])], 1), e('b-button', { staticClass: 'ml-3 add_button text-white', attrs: { variant: 'warning' }, on: { click: t.openAdminCreate } }, [t._v('Create Admin'), e('i', { staticClass: 'las la-plus ml-3' })])], 1)]), e('b-col', { attrs: { lg: '12' } }, [e('main-table', { staticClass: 'mb-0 table-borderless', attrs: { fields: t.columns, list_url: 'admins', reloadData: t.reloadTable } })], 1)], 1)], 1) }; var n = []; var s = (e('d3b7'), e('bcae')); var o = function () { var t = this; var a = t.$createElement; var e = t._self._c || a; return e('div', [e('ValidationObserver', { scopedSlots: t._u([{ key: 'default', fn: function (a) { var i = a.handleSubmit; return [e('b-form', { on: { submit: function (a) { return a.preventDefault(), i(t.saveAdmin) } } }, [e('b-row', [e('b-col', { staticClass: 'mb-3', attrs: { md: '12' } }, [e('input-form', { attrs: { placeholder: 'Ex: Admin', validate: 'required', name: 'name', label: 'admin Name' }, model: { value: t.admin.name, callback: function (a) { t.$set(t.admin, 'name', a) }, expression: 'admin.name' } })], 1), e('b-col', { staticClass: 'mb-3', attrs: { md: '12' } }, [e('input-form', { attrs: { placeholder: 'Ex: Admin@coflow.com', validate: 'required|email', name: 'email', label: 'Email' }, model: { value: t.admin.email, callback: function (a) { t.$set(t.admin, 'email', a) }, expression: 'admin.email' } })], 1), e('b-col', { staticClass: 'mb-3', attrs: { md: '12' } }, [e('input-form', { attrs: { placeholder: '*********', type: 'password', validate: 'required', name: 'password', label: 'Password' }, model: { value: t.admin.password, callback: function (a) { t.$set(t.admin, 'password', a) }, expression: 'admin.password' } })], 1), e('b-col', { staticClass: 'mb-3', attrs: { md: '12' } }, [e('main-select', { attrs: { labelTitle: 'Country', validate: 'required', name: 'country_id', placeholder: 'Choose', options: t.allRoles, label: 'name', reduce: function (t) { return t.id } }, model: { value: t.admin.role_id, callback: function (a) { t.$set(t.admin, 'role_id', a) }, expression: 'admin.role_id' } })], 1), e('b-col', { staticClass: 'mb-5', attrs: { md: '12' } }, [e('cropper-images', { attrs: { label: 'Upload Logo', nameOfImage: 'image.jpg', progressLoading: t.loadingLogo, showProgress: !1, multi: !1, imageUrl: t.logoImage }, on: { 'cropper-save': t.savelogoImage } })], 1)], 1), t.typeOfModal != 'view' ? e('b-row', [e('b-col', { staticClass: 'mt-4', attrs: { md: '12' } }, [t.typeOfModal == 'add' ? e('div', { staticClass: 'd-flex justify-content-center' }, [t.requestLoading ? e('b-button', { staticClass: 'button-orange-modal' }, [e('spinner-loading')], 1) : e('b-button', { staticClass: 'button-orange-modal', attrs: { type: 'submit' } }, [e('i', { staticClass: 'las la-plus' })])], 1) : t._e(), t.typeOfModal == 'edit' ? e('div', { staticClass: 'd-flex justify-content-center' }, [t.requestLoading ? e('b-button', { staticClass: 'button-blue-modal' }, [e('spinner-loading')], 1) : e('b-button', { staticClass: 'button-blue-modal', attrs: { type: 'submit' } }, [e('i', { staticClass: 'las la-pen' })])], 1) : t._e()])], 1) : t._e()], 1)] } }]) })], 1) }; var l = []; var d = (e('b0c0'), e('3548')); var r = { props: { typeOfModal: { type: String }, requestLoading: { type: Boolean }, adminDetails: { type: Object } }, data: function () { return { admin: { name: '', email: '', password: '', role_id: '', logo: '' }, allRoles: [], loadingLogo: 0, logoImage: '' } }, methods: { savelogoImage: function (t) { this.admin.logo = t.image, this.logoImage = '' }, getAllPermissions: function () { var t = this; d.a.getAllRoles().then(function (a) { t.allRoles = a.data.data }) }, saveAdmin: function () { var t = new FormData(); t.append('name', this.admin.name), t.append('email', this.admin.email), t.append('password', this.admin.password), t.append('role_id', this.admin.role_id), t.append('image', this.admin.logo), this.adminDetails ? (t.append('_method', 'PATCH'), this.$emit('editAdmin', t)) : this.$emit('saveAdmin', t) } }, watch: {}, computed: {}, created: function () { this.getAllPermissions(), this.adminDetails && (this.admin = { name: this.adminDetails.name, email: this.adminDetails.email, password: '', role_id: this.adminDetails.role_id }, this.logoImage = this.adminDetails.logo) } }; var m = r; var c = e('2877'); var u = Object(c.a)(m, o, l, !1, null, null, null); var b = u.exports; var f = { components: { AdminDetails: b }, data: function () { return { columns: [{ label: 'Image', key: 'logo', class: 'text-left', type: 'image' }, { label: 'Name', key: 'name', class: 'text-left' }, { label: 'Email', key: 'email', class: 'text-left' }, { label: 'Role', key: 'role.name', class: 'text-left' }, { label: 'Actions', key: 'actions', class: 'text-left', type: 'actions', actions: [{ icon: 'las la-pen', color: 'info', text: 'Edit', actionName: 'showAdminInfo', actionParams: ['id'] }, { icon: 'las la-trash-alt', color: 'danger', text: 'Delete', showAlert: !0, actionHeader: 'Delete', titleHeader: 'Admin', textContent: 'name', url: 'admins' }] }], reloadTable: !1, requestLoading: !1, typeOfModal: 'add', adminDetails: {}, adminId: '' } }, methods: { openAdminCreate: function () { this.adminDetails = {}, this.typeOfModal = 'add', this.$bvModal.show('adminDetails') }, saveAdmin: function (t) { var a = this; this.requestLoading = !0, d.a.saveAdmin(t).then(function (t) { s.c.showSnackbar('success', t.data.message), a.$bvModal.hide('adminDetails'), a.reloadTable = !0 }).finally(function () { a.requestLoading = !1 }) }, editAdmin: function (t) { var a = this; this.requestLoading = !0, d.a.editAdmin(this.adminId, t).then(function (t) { s.c.showSnackbar('success', t.data.message), a.$bvModal.hide('adminDetails'), a.reloadTable = !0 }).finally(function () { a.requestLoading = !1 }) }, showAdminInfo: function (t) { var a = this; this.adminId = t.id, d.a.getAdminInfo(t.id).then(function (t) { a.adminDetails = t.data.data, a.typeOfModal = 'edit', a.$bvModal.show('adminDetails') }) } }, mounted: function () { s.c.index() }, beforeDestroy: function () { this.$root.$off('showAdminInfo') }, created: function () { this.$root.$on('showAdminInfo', this.showAdminInfo) } }; var p = f; var g = Object(c.a)(p, i, n, !1, null, null, null); a.default = g.exports } }])
// # sourceMappingURL=chunk-fa95b220.d1954cc3.js.map
